/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   get_next_line.c                                    :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: bmiller <marvin@42.fr>                     +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2017/01/16 17:02:28 by bmiller           #+#    #+#             */
/*   Updated: 2017/01/16 19:37:32 by bmiller          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <unistd.h>
#include "get_next_line.h"

int	get_next_line(const int fd, char **line)
{
  static char	rest[BUFF_SIZE + 1];
  char		buff[BUFF_SIZE + 1];
  int		bytes_read;
  int		next_nl;
  char		*l_start;

  if ((!line || fd < 0 || read(fd, buff, 0) < 0 || !(*line = ft_strnew(1))))
    return (-1);
  if (rest[0])
    {
    if (ft_strchr(rest, '\n'))
      {
	next_nl = ft_strchr(rest, '\n') - &(rest[0]);
	ft_strncpy(*line, rest, next_nl);
	ft_strncpy(rest, &(rest[next_nl]), BUFF_SIZE - next_nl);
	ft_strclr(&(rest[BUFF_SIZE - next_nl]));
	*(line + next_nl) = 0;
	return (1);
      }
    else
      {
	ft_strncpy(*line, rest, BUFF_SIZE + 1);
	l_start = *line;
	*line += BUFF_SIZE;
      }
    }
  while ((bytes_read = read(fd, buff, BUFF_SIZE)))
    {
      if (bytes_read == -1)
	return (-1);
      if (ft_strchr(buff, '\n'))
	{
	  next_nl = ft_strchr(buff, '\n') - &(buff[0]);
	  ft_strncpy(*line, buff, next_nl + 1);
	  *(line + next_nl) = 0;
	  ft_strncpy(rest, &(buff[next_nl]), BUFF_SIZE - next_nl + 1);
	  if (l_start && *l_start)
	    *line = l_start;
	  return (1);
	}
      else
	{
	  ft_strncpy(*line, buff, BUFF_SIZE);
	  *line += BUFF_SIZE;
	  if (!l_start || !(*l_start))
	    l_start = *line;
	}
    }
  return (0);
}
